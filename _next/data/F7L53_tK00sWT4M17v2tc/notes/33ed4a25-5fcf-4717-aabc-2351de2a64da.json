{"pageProps":{"note":{"id":"33ed4a25-5fcf-4717-aabc-2351de2a64da","title":"Sort","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"type":"note","desc":"","links":[{"type":"ref","from":{"fname":"development.algo.sort","id":"33ed4a25-5fcf-4717-aabc-2351de2a64da","vaultName":"my_note"},"value":"development.algo.heap","position":{"start":{"line":92,"column":1,"offset":1911},"end":{"line":92,"column":55,"offset":1965},"indent":[]},"xvault":true,"to":{"fname":"development.algo.heap","anchorHeader":"heap sort","vaultName":"my_note"}},{"from":{"fname":"development.algo","vaultName":"my_note"},"type":"backlink","position":{"start":{"line":17,"column":3,"offset":284},"end":{"line":17,"column":31,"offset":312},"indent":[]},"value":"development.algo.sort","alias":"排序"}],"anchors":{"merge-sort":{"type":"header","value":"merge-sort","line":8,"column":0},"quick-sort":{"type":"header","value":"quick-sort","line":53,"column":0},"heap-sort":{"type":"header","value":"heap-sort","line":96,"column":0},"拓扑排序":{"type":"header","value":"拓扑排序","line":100,"column":0}},"fname":"development.algo.sort","updated":1615874843738,"created":1615873950053,"parent":"400115e9-30f7-4a13-9776-db059bc9cd42","children":[],"data":{},"custom":{},"contentHash":"a494edbdf4532701ac94882e784f6a59"},"body":"<h1 id=\"sort\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#sort\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Sort</h1>\n<h1 id=\"merge-sort\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#merge-sort\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>merge sort</h1>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n \n         <span class=\"token comment\"># Finding the mid of the array</span>\n        mid <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">2</span>\n \n        <span class=\"token comment\"># Dividing the array elements</span>\n        L <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>mid<span class=\"token punctuation\">]</span>\n \n        <span class=\"token comment\"># into 2 halves</span>\n        R <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n \n        <span class=\"token comment\"># Sorting the first half</span>\n        mergeSort<span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span>\n \n        <span class=\"token comment\"># Sorting the second half</span>\n        mergeSort<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span>\n \n        i <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n \n        <span class=\"token comment\"># Copy data to temp arrays L[] and R[]</span>\n        <span class=\"token keyword\">while</span> i <span class=\"token operator\">&#x3C;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> j <span class=\"token operator\">&#x3C;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> L<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x3C;</span> R<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n                i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> R<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n                j <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            k <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n \n        <span class=\"token comment\"># Checking if any element was left</span>\n        <span class=\"token keyword\">while</span> i <span class=\"token operator\">&#x3C;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n            i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            k <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n \n        <span class=\"token keyword\">while</span> j <span class=\"token operator\">&#x3C;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> R<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n            j <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            k <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n</code></pre>\n<h1 id=\"quick-sort\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#quick-sort\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>quick sort</h1>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n    i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>low<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>         <span class=\"token comment\"># index of smaller element </span>\n    pivot <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span>     <span class=\"token comment\"># pivot </span>\n  \n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n  \n        <span class=\"token comment\"># If current element is smaller than or </span>\n        <span class=\"token comment\"># equal to pivot </span>\n        <span class=\"token keyword\">if</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x3C;=</span> pivot<span class=\"token punctuation\">:</span> \n  \n            <span class=\"token comment\"># increment index of smaller element </span>\n            i <span class=\"token operator\">=</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n            arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> \n  \n    arr<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> \n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> \n  \n<span class=\"token comment\"># The main function that implements QuickSort </span>\n<span class=\"token comment\"># arr[] --> Array to be sorted, </span>\n<span class=\"token comment\"># low  --> Starting index, </span>\n<span class=\"token comment\"># high  --> Ending index </span>\n  \n<span class=\"token comment\"># Function to do Quick sort </span>\n  \n  \n<span class=\"token keyword\">def</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> \n        <span class=\"token keyword\">return</span> arr \n    <span class=\"token keyword\">if</span> low <span class=\"token operator\">&#x3C;</span> high<span class=\"token punctuation\">:</span> \n  \n        <span class=\"token comment\"># pi is partitioning index, arr[p] is now </span>\n        <span class=\"token comment\"># at right place </span>\n        pi <span class=\"token operator\">=</span> partition<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span> \n  \n        <span class=\"token comment\"># Separately sort elements before </span>\n        <span class=\"token comment\"># partition and after partition </span>\n        quickSort<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> pi<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> \n        quickSort<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> pi<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span> \n</code></pre>\n<h1 id=\"heap-sort\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#heap-sort\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>heap sort</h1>\n<p></p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Heap</span></div>\n<a href=\"/notes/6b58aa5b-3039-44b3-8aee-20469ed20d10\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">→</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><p>Start anchor heap sort not found</p>\n</div></div><p></p><p></p>\n<h1 id=\"拓扑排序\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#拓扑排序\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>拓扑排序</h1>\n<p>有向图，是将G中所有顶点排成一个线性序列，使得图中任意一对顶点u和v，若边(u,v)∈E(G)，则u在线性序列中出现在v之前。</p>\n<ul>\n<li>选择一个入度为0的顶点并输出之；</li>\n<li>从图中删除此顶点及其所有出边；</li>\n<li>找下一个入度为0的点</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/400115e9-30f7-4a13-9776-db059bc9cd42\">Algo (my_note)</a></li>\n</ul>","noteIndex":{"id":"0f1b48c7-3a25-4016-83a5-15864d7803ad","title":"Development","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"type":"note","desc":"","links":[{"from":{"fname":"root","vaultName":"my_note"},"type":"backlink","position":{"start":{"line":8,"column":3,"offset":63},"end":{"line":8,"column":21,"offset":81},"indent":[]},"value":"development","alias":"开发"}],"anchors":{},"fname":"development","updated":1618381238346,"created":1612940782409,"parent":null,"children":["400115e9-30f7-4a13-9776-db059bc9cd42","xsX5v3ZsyJ0i6gf9","1bc3b45a-b6f4-4150-87d3-5bd5b6eb8c24","6cea4852-6e7c-4140-b476-85c07b48a642","a40ef849-d301-4d74-a778-e6d9469dfb5d","09d9081f-3dff-453d-8488-7d2344cc8895","92917ea3-452e-48dc-875e-5cd0002041db","2e151826-cb22-4d89-8ce0-71dad7204ce8","baa39444-0da9-4c55-8df7-2a6f8f787fa4","62daf50d-a39e-463f-aabd-be53790281fd","3524d0a7-be73-45d6-847e-c970f5c1c760","eac0f243-05b3-4b95-bec3-848e33edbc40"],"data":{},"custom":{"nav_order":0,"permalink":"/"},"body":"\n","contentHash":"38357962f5a50c6fd7d318dfa66bea90"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"previewV2Enabled":false,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{}},"workspace":{"dendronVersion":"0.85.0","vaults":[{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"enableEditorDecorations":true},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["development","life"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://notes.tczhong.com","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"writeStubs":false,"seo":{"title":"my_note","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"development"}}},"__N_SSG":true}