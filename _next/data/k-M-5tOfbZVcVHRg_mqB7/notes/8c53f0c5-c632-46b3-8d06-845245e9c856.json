{"pageProps":{"note":{"id":"8c53f0c5-c632-46b3-8d06-845245e9c856","title":"Linklayer","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"type":"note","desc":"","links":[{"from":{"fname":"development.network","id":"92917ea3-452e-48dc-875e-5cd0002041db","vaultName":"my_note"},"type":"backlink","position":{"start":{"line":9,"column":3,"offset":188},"end":{"line":9,"column":41,"offset":226},"indent":[]},"value":"development.network.linklayer"}],"anchors":{"data-link-layer":{"type":"header","value":"data-link-layer","line":8,"column":0},"csmacd":{"type":"header","value":"csmacd","line":39,"column":0},"arp":{"type":"header","value":"arp","line":54,"column":0},"csmaca":{"type":"header","value":"csmaca","line":79,"column":0}},"fname":"development.network.linklayer","updated":1618205583209,"created":1615775516911,"parent":"92917ea3-452e-48dc-875e-5cd0002041db","children":[],"data":{},"custom":{},"contentHash":"2d384c0055e0acbad0f029abb8441d36"},"body":"<h1 id=\"linklayer\">Linklayer<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#linklayer\"></a></h1>\n<h1 id=\"data-link-layer\">data link layer<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#data-link-layer\"></a></h1>\n<p>ethernet, wifi, fiber, telephony</p>\n<p>transfer frames: ethernet, PPP, MAC address (add size, error correction codes)</p>\n<ul>\n<li>Inserts framing info to denote frame boundaries</li>\n<li>Inserts control, addressing and error correction info in header</li>\n<li>Detects transmission errors on link. May retransmit frames</li>\n<li>Activation, maintenance, &#x26; deactivation of link connection</li>\n</ul>\n<p><img src=\"/assets/images/2021-03-25-15-55-22.png\">\n<img src=\"/assets/images/2021-03-25-15-56-16.png\"></p>\n<p><img src=\"/assets/images/2021-03-25-15-58-20.png\"></p>\n<ul>\n<li>mission: transfer frames from one node, over a link</li>\n<li>scope: Service received from physical layer is the ability to move a bit across the link\n<ul>\n<li>A packet is transferred by different link protocols over different links</li>\n<li>Each data link protocol provides different services</li>\n</ul>\n</li>\n<li>addressing mechanism:MAC</li>\n<li>data types : frame</li>\n<li>responsibilities/services\n<pre><code>- Framing:  encapsulate datagram into frame, adding header, trailer; identify source, destination with addresses • Different from IP \n</code></pre>\naddresses!!\n<pre><code>- Link access: use medium access control (MAC) protocol\n- Error Detection\n- Error Correction\n- Reliable Delivery: critical for wireless links ➙ high error rates\n</code></pre>\n</li>\n</ul>\n<h2 id=\"csmacd\">CSMA/CD<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#csmacd\"></a></h2>\n<ul>\n<li>Carrier Sense: Listen before talking Multiple Access: Broadcast Medium</li>\n<li>Collision Detection: Listen as you talk. If you hear someone else, be quiet</li>\n<li>Capturing a Channel: If no other station initiates transmission during this period, sender has captured the channel. t = tprop</li>\n<li><strong>Ethernet</strong> is the most famous example</li>\n<li>Before transmitting, listen</li>\n<li>If channel is sensed idle, send the frame </li>\n<li>Else, defer transmission a random time</li>\n<li>If collision is detected, abort transmission </li>\n<li>reduces channel wastage</li>\n<li><strong>Min transmission time must be long enough for collisions to propagate</strong></li>\n<li>Length of the packet >= 2 <em> Tp </em> Bandwidth of the link worst case</li>\n</ul>\n<h2 id=\"arp\">ARP<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#arp\"></a></h2>\n<ul>\n<li>mission: Translate a network-layer address (IP) to a link-layer address (MAC), Similar to DNS</li>\n<li>frame fields:\n<ul>\n<li>Sender Ethernet and IP address</li>\n<li>Target Ethernet and IP address</li>\n</ul>\n</li>\n<li>transmission mechanism\n<ul>\n<li>Sent in an Ethernet frame to a broadcast address</li>\n<li>ARP Reply takes the same form</li>\n<li>broadcast request, if some one know, reply</li>\n<li>if in another subnet, sent datagram to router </li>\n</ul>\n</li>\n<li>caching\n<ul>\n<li>Each Ethernet adapter uses a table to keep track of known mappings between IP addresses and Ethernet MAC Addrs</li>\n<li>When given IP address, ARP looks in ARP table and returns corresponding MAC address\n<ul>\n<li>If IP not in table, queue frame and broadcast ARP request</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>security\n<ul>\n<li>ARP frames are not authenticateds</li>\n<li>May be spoofed by a malicious entity</li>\n<li>May be proxied by design</li>\n</ul>\n</li>\n<li>gratuitous use\n<ul>\n<li>ARP can be an “announcement” protocol</li>\n<li>Can send an ARP frame just to update other node’s ARP tables</li>\n<li>Set target address and sender address to the same value</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"csmaca\">csma/ca<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#csmaca\"></a></h2>\n<ul>\n<li>CSMA / Collision Avoidance</li>\n<li>\n<ol>\n<li>Listen for a specified time (DIFS) If medium is not free:</li>\n</ol>\n<ul>\n<li>\n<ol>\n<li>Exponential Backoff (下次请求的时间)</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>If medium is free:\n<ul>\n<li>Transmit entire frame</li>\n<li>Await ACK frame （AP send ACK to sender）</li>\n<li>If no ACK, then Exponential Backoff</li>\n</ul>\n</li>\n<li>ACK\n<ul>\n<li>protects against bit errors</li>\n<li>Receiver only sends ACK if frame passes CRC</li>\n</ul>\n</li>\n<li>Exponential Backoff\n<ul>\n<li>Each node chooses a random number </li>\n<li>Max size increases from round to round</li>\n<li>Can be modeled as a counter (wait time)\n<ul>\n<li>Decremented during any idle time</li>\n<li>Put on hold if another node transmits and for a short time afterwards (SIFS)</li>\n<li>When zero, the counting station may transmit</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/92917ea3-452e-48dc-875e-5cd0002041db\">Network (my_note)</a></li>\n</ul>","noteIndex":{"id":"0f1b48c7-3a25-4016-83a5-15864d7803ad","title":"Development","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"type":"note","desc":"","links":[{"from":{"fname":"root","id":"c95dc4f5-23db-45e7-a15b-64582a183ccc","vaultName":"my_note"},"type":"backlink","position":{"start":{"line":8,"column":3,"offset":63},"end":{"line":8,"column":21,"offset":81},"indent":[]},"value":"development"}],"anchors":{},"fname":"development","updated":1618381238346,"created":1612940782409,"parent":null,"children":["400115e9-30f7-4a13-9776-db059bc9cd42","xsX5v3ZsyJ0i6gf9","1bc3b45a-b6f4-4150-87d3-5bd5b6eb8c24","6cea4852-6e7c-4140-b476-85c07b48a642","a40ef849-d301-4d74-a778-e6d9469dfb5d","09d9081f-3dff-453d-8488-7d2344cc8895","p11phg7nb10yw0wck1fyagq","92917ea3-452e-48dc-875e-5cd0002041db","2e151826-cb22-4d89-8ce0-71dad7204ce8","baa39444-0da9-4c55-8df7-2a6f8f787fa4","q4um3bc3st86ilkkvdjom6x","62daf50d-a39e-463f-aabd-be53790281fd","3524d0a7-be73-45d6-847e-c970f5c1c760","eac0f243-05b3-4b95-bec3-848e33edbc40","ubbcds8vm331to6kyei2kwk"],"data":{},"custom":{"nav_order":0,"permalink":"/"},"body":"\n","contentHash":"38357962f5a50c6fd7d318dfa66bea90"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"previewV2Enabled":false,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.90.0","vaults":[{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableEditorDecorations":true,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["development","life"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"my_note","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://notes.tczhong.com","siteFaviconPath":"favicon.ico","siteIndex":"development"}}},"__N_SSG":true}