{"pageProps":{"note":{"id":"edy86wrb34dip229fvukz2w","title":"huggingface","desc":"","updated":1687629485623,"created":1687629470373,"custom":{},"fname":"development.ml.LLM.llama.huggingface","type":"note","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"contentHash":"37837b0de9631613f0dcac61e37d9c10","links":[],"anchors":{},"children":[],"parent":"9cp08wuyd7t35jzracxxqbv","data":{}},"body":"<h1 id=\"huggingface\">huggingface<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#huggingface\"></a></h1>\n<pre><code>#@title ## 8.1. Upload Config\nfrom huggingface_hub import login\nfrom huggingface_hub import HfApi\nfrom huggingface_hub.utils import validate_repo_id, HfHubHTTPError\n\n#@markdown Login to Huggingface Hub \n#@markdown > Get **your** huggingface `WRITE` token [here](https://huggingface.co/settings/tokens)\nwrite_token = \"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\" #@param {type:\"string\"}\nlogin(write_token, add_to_git_credential=True)\n\napi = HfApi()\nuser = api.whoami(write_token)\n\n#@markdown Fill this if you want to upload to your organization, or just leave it empty.\n\norgs_name = \"\" #@param{type:\"string\"}\n\n#@markdown If your model/dataset repo didn't exist, it will automatically create your repo.\nmodel_name = \"cczhong/chinese-alpaca-plus-lora-7b-merged-ggml-4b\" #@param{type:\"string\"}\n#dataset_name = \"your-dataset-name\" #@param{type:\"string\"}\nmake_this_model_private = False #@param{type:\"boolean\"}\nmodel_repo=model_name\n\nif model_name:\n  try:\n      validate_repo_id(model_repo)\n      api.create_repo(repo_id=model_repo, \n                      private=make_this_model_private)\n      print(\"Model Repo didn't exists, creating repo\")\n      print(\"Model Repo: \",model_repo,\"created!\\n\")\n\n  except HfHubHTTPError as e:\n      print(f\"Model Repo: {model_repo} exists, skipping create repo\\n\")\n\n\nfrom huggingface_hub import HfApi\nfrom pathlib import Path\n%store -r\n\napi = HfApi()\ncommit_message = \"add new model\" #@param {type :\"string\"}\nmodel_path = \"/home/ubuntu/llama.cpp/zh-models/alpaca-combined\"\nif not commit_message:\n  commit_message = \"feat: upload \"+project_name+\" lora model\"\npath_in_repo = None\ndef upload_model(model_paths, is_folder :bool, is_config :bool):\n  path_obj = Path(model_paths)\n  trained_model = path_obj.parts[-1]\n  \n  if path_in_repo:\n    trained_model = path_in_repo\n  \n  if is_config:\n    trained_model = f\"{project_name}_config\"\n\n  if is_folder:\n    print(f\"Uploading {trained_model} to https://huggingface.co/\"+model_repo)\n    print(f\"Please wait...\")\n    \n    api.upload_folder(\n        folder_path=model_paths,\n        path_in_repo=trained_model,\n        repo_id=model_repo,\n        commit_message=commit_message,\n        ignore_patterns=\".ipynb_checkpoints\"\n        )\n    print(f\"Upload success, located at https://huggingface.co/\"+model_repo+\"/tree/main\\n\")\n  else: \n    print(f\"Uploading {trained_model} to https://huggingface.co/\"+model_repo)\n    print(f\"Please wait...\")\n            \n    api.upload_file(\n        path_or_fileobj=model_paths,\n        path_in_repo=trained_model,\n        repo_id=model_repo,\n        commit_message=commit_message,\n        )\n        \n    print(f\"Upload success, located at https://huggingface.co/\"+model_repo+\"/blob/main/\"+trained_model+\"\\n\")\n      \ndef upload():\n    if model_path.endswith((\".ckpt\", \".safetensors\", \".pt\")):\n      upload_model(model_path, False, False)\n    else:\n      upload_model(model_path, True, False)\n\n    #if config_path:\n    #  upload_model(config_path, True, True)\n\nupload()\n</code></pre>","noteIndex":{"id":"0f1b48c7-3a25-4016-83a5-15864d7803ad","title":"Development","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"type":"note","desc":"","links":[{"from":{"fname":"root","id":"c95dc4f5-23db-45e7-a15b-64582a183ccc","vaultName":"my_note"},"type":"backlink","position":{"start":{"line":8,"column":3,"offset":63},"end":{"line":8,"column":21,"offset":81},"indent":[]},"value":"development"}],"anchors":{},"fname":"development","updated":1618381238346,"created":1612940782409,"parent":null,"children":["400115e9-30f7-4a13-9776-db059bc9cd42","xsX5v3ZsyJ0i6gf9","1bc3b45a-b6f4-4150-87d3-5bd5b6eb8c24","6cea4852-6e7c-4140-b476-85c07b48a642","a40ef849-d301-4d74-a778-e6d9469dfb5d","09d9081f-3dff-453d-8488-7d2344cc8895","p11phg7nb10yw0wck1fyagq","92917ea3-452e-48dc-875e-5cd0002041db","2e151826-cb22-4d89-8ce0-71dad7204ce8","baa39444-0da9-4c55-8df7-2a6f8f787fa4","q4um3bc3st86ilkkvdjom6x","62daf50d-a39e-463f-aabd-be53790281fd","3524d0a7-be73-45d6-847e-c970f5c1c760","eac0f243-05b3-4b95-bec3-848e33edbc40","ubbcds8vm331to6kyei2kwk"],"data":{},"custom":{"nav_order":0,"permalink":"/"},"body":"\n","contentHash":"38357962f5a50c6fd7d318dfa66bea90"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"previewV2Enabled":false,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.90.0","vaults":[{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableEditorDecorations":true,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["development","life"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"my_note","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://notes.tczhong.com","siteFaviconPath":"favicon.ico","siteIndex":"development"}}},"__N_SSG":true}