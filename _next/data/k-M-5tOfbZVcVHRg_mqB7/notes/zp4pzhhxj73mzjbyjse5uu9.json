{"pageProps":{"note":{"id":"zp4pzhhxj73mzjbyjse5uu9","title":"Json","desc":"","updated":1702701497397,"created":1702701491423,"custom":{},"fname":"development.swift.json","type":"note","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"contentHash":"05c6f9d814358dd60a4613227e557a47","links":[],"anchors":{"swift中的decodable协议":{"type":"header","text":"Swift中的Decodable协议","value":"swift中的decodable协议","line":9,"column":0,"depth":1},"概述":{"type":"header","text":"概述","value":"概述","line":11,"column":0,"depth":2},"作用":{"type":"header","text":"作用","value":"作用","line":15,"column":0,"depth":2},"使用decodable":{"type":"header","text":"使用Decodable","value":"使用decodable","line":20,"column":0,"depth":2},"1-定义符合decodable的类型":{"type":"header","text":"1. 定义符合Decodable的类型","value":"1-定义符合decodable的类型","line":22,"column":0,"depth":3},"2-解码json":{"type":"header","text":"2. 解码JSON","value":"2-解码json","line":35,"column":0,"depth":3},"注意事项":{"type":"header","text":"注意事项","value":"注意事项","line":56,"column":0,"depth":2},"总结":{"type":"header","text":"总结","value":"总结","line":62,"column":0,"depth":2}},"children":[],"parent":"q4um3bc3st86ilkkvdjom6x","data":{}},"body":"<h1 id=\"json\">Json<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#json\"></a></h1>\n<h1 id=\"swift中的decodable协议\">Swift中的<code>Decodable</code>协议<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#swift中的decodable协议\"></a></h1>\n<h2 id=\"概述\">概述<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#概述\"></a></h2>\n<p><code>Decodable</code>是Swift标准库中的一个协议，用于将数据（如JSON）解码为Swift的数据类型。</p>\n<h2 id=\"作用\">作用<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#作用\"></a></h2>\n<ul>\n<li><strong>数据解码</strong>: 允许你将符合外部格式（如JSON、XML）的数据转换成Swift内部的数据类型。</li>\n<li><strong>简化解析流程</strong>: 使用<code>Decodable</code>可以大幅简化从外部数据源到Swift对象的转换过程。</li>\n</ul>\n<h2 id=\"使用decodable\">使用<code>Decodable</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#使用decodable\"></a></h2>\n<h3 id=\"1-定义符合decodable的类型\">1. 定义符合<code>Decodable</code>的类型<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#1-定义符合decodable的类型\"></a></h3>\n<p>首先，你需要定义一个符合<code>Decodable</code>协议的结构体或类。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Decodable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n    <span class=\"token keyword\">var</span> age<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在这个例子中，<code>User</code>结构体可以解码包含<code>name</code>和<code>age</code>字段的JSON对象。</p>\n<h3 id=\"2-解码json\">2. 解码JSON<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#2-解码json\"></a></h3>\n<p>然后，你可以使用如<code>JSONDecoder</code>的解码器来将JSON数据转换为<code>User</code>类型的实例。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> json <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"\"\"\n{\n    \"name\": \"张三\",\n    \"age\": 28\n}\n\"\"\"</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>using<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>utf8<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span>\n\n<span class=\"token keyword\">let</span> decoder <span class=\"token operator\">=</span> <span class=\"token class-name\">JSONDecoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">:</span> json<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 输出: 张三</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"注意事项\">注意事项<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#注意事项\"></a></h2>\n<ul>\n<li>字段匹配：<code>Decodable</code>类型的属性名需要与JSON中的键匹配，或者你需要自定义<code>CodingKeys</code>来映射不匹配的键。</li>\n<li>数据类型匹配：JSON中的数据类型需要与Swift中的对应类型匹配。</li>\n<li>错误处理：解码过程可能会抛出错误，通常需要使用<code>try-catch</code>语句来处理。</li>\n</ul>\n<h2 id=\"总结\">总结<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#总结\"></a></h2>\n<p><code>Decodable</code>协议是Swift中处理数据解码的关键工具。它在将外部数据（如JSON）解码为Swift内部数据类型时非常有用，使得数据处理变得简单和直接。</p>","noteIndex":{"id":"0f1b48c7-3a25-4016-83a5-15864d7803ad","title":"Development","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"type":"note","desc":"","links":[{"from":{"fname":"root","id":"c95dc4f5-23db-45e7-a15b-64582a183ccc","vaultName":"my_note"},"type":"backlink","position":{"start":{"line":8,"column":3,"offset":63},"end":{"line":8,"column":21,"offset":81},"indent":[]},"value":"development"}],"anchors":{},"fname":"development","updated":1618381238346,"created":1612940782409,"parent":null,"children":["400115e9-30f7-4a13-9776-db059bc9cd42","xsX5v3ZsyJ0i6gf9","1bc3b45a-b6f4-4150-87d3-5bd5b6eb8c24","6cea4852-6e7c-4140-b476-85c07b48a642","a40ef849-d301-4d74-a778-e6d9469dfb5d","09d9081f-3dff-453d-8488-7d2344cc8895","p11phg7nb10yw0wck1fyagq","92917ea3-452e-48dc-875e-5cd0002041db","2e151826-cb22-4d89-8ce0-71dad7204ce8","baa39444-0da9-4c55-8df7-2a6f8f787fa4","q4um3bc3st86ilkkvdjom6x","62daf50d-a39e-463f-aabd-be53790281fd","3524d0a7-be73-45d6-847e-c970f5c1c760","eac0f243-05b3-4b95-bec3-848e33edbc40","ubbcds8vm331to6kyei2kwk"],"data":{},"custom":{"nav_order":0,"permalink":"/"},"body":"\n","contentHash":"38357962f5a50c6fd7d318dfa66bea90"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"previewV2Enabled":false,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.90.0","vaults":[{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableEditorDecorations":true,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["development","life"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"my_note","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://notes.tczhong.com","siteFaviconPath":"favicon.ico","siteIndex":"development"}}},"__N_SSG":true}