{"pageProps":{"note":{"id":"vfx7m1h79z3z3rz5syucfd6","title":"Mainactor","desc":"","updated":1702701805709,"created":1702701799980,"custom":{},"fname":"development.swift.mainactor","type":"note","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"contentHash":"578a16d59ecf75a1c0ba95f41462418b","links":[],"anchors":{"swift中的mainactor":{"type":"header","text":"Swift中的MainActor","value":"swift中的mainactor","line":9,"column":0,"depth":1},"概念":{"type":"header","text":"概念","value":"概念","line":11,"column":0,"depth":2},"作用":{"type":"header","text":"作用","value":"作用","line":15,"column":0,"depth":2},"使用mainactor":{"type":"header","text":"使用MainActor","value":"使用mainactor","line":20,"column":0,"depth":2},"1-标记方法或属性":{"type":"header","text":"1. 标记方法或属性","value":"1-标记方法或属性","line":22,"column":0,"depth":3},"2-使用mainactor执行代码块":{"type":"header","text":"2. 使用MainActor执行代码块","value":"2-使用mainactor执行代码块","line":38,"column":0,"depth":3},"3-与全局actor的区别":{"type":"header","text":"3. 与全局actor的区别","value":"3-与全局actor的区别","line":52,"column":0,"depth":3},"注意事项":{"type":"header","text":"注意事项","value":"注意事项","line":56,"column":0,"depth":2},"总结":{"type":"header","text":"总结","value":"总结","line":61,"column":0,"depth":2}},"children":[],"parent":"q4um3bc3st86ilkkvdjom6x","data":{}},"body":"<h1 id=\"mainactor\">Mainactor<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#mainactor\"></a></h1>\n<h1 id=\"swift中的mainactor\">Swift中的<code>MainActor</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#swift中的mainactor\"></a></h1>\n<h2 id=\"概念\">概念<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#概念\"></a></h2>\n<p><code>MainActor</code>是Swift中的一个特性，用于并发编程。它是一个特殊的actor，确保访问和修改UI相关的代码在主线程（也就是UI线程）上执行。这对于编写线程安全的UI代码非常重要。</p>\n<h2 id=\"作用\">作用<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#作用\"></a></h2>\n<ul>\n<li><strong>线程安全</strong>: 确保UI更新在主线程上安全执行，防止线程冲突。</li>\n<li><strong>简化代码</strong>: 通过自动调度到主线程，减少了手动管理线程的复杂性。</li>\n</ul>\n<h2 id=\"使用mainactor\">使用<code>MainActor</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#使用mainactor\"></a></h2>\n<h3 id=\"1-标记方法或属性\">1. 标记方法或属性<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#1-标记方法或属性\"></a></h3>\n<p>使用<code>@MainActor</code>来标记类、结构体、枚举中的方法或属性。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyViewController</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">UIViewController</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attribute atrule\">@MainActor</span> <span class=\"token keyword\">var</span> myProperty<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n\n    <span class=\"token attribute atrule\">@MainActor</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">updateUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 更新UI的代码</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在这个例子中，<code>myProperty</code>属性和<code>updateUI</code>方法被标记为<code>@MainActor</code>，确保它们在主线程上执行。</p>\n<h3 id=\"2-使用mainactor执行代码块\">2. 使用<code>MainActor</code>执行代码块<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#2-使用mainactor执行代码块\"></a></h3>\n<p>可以使用<code>MainActor.run</code>来执行一个代码块。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token class-name\">Task</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token class-name\">MainActor</span><span class=\"token punctuation\">.</span>run <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 在主线程上执行的代码</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>这种方式在异步代码中切换回主线程更新UI时非常有用。</p>\n<h3 id=\"3-与全局actor的区别\">3. 与全局actor的区别<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#3-与全局actor的区别\"></a></h3>\n<p><code>MainActor</code>是一个全局actor，这意味着它是单例的，整个应用中只有一个<code>MainActor</code>实例。</p>\n<h2 id=\"注意事项\">注意事项<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#注意事项\"></a></h2>\n<ul>\n<li>使用<code>MainActor</code>时，要确保只有与UI相关或必须在主线程上执行的代码被标记。</li>\n<li>对于需要高性能的计算或后台处理的代码，应避免在<code>MainActor</code>上执行。</li>\n</ul>\n<h2 id=\"总结\">总结<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#总结\"></a></h2>\n<p><code>MainActor</code>是Swift中处理并发UI更新的重要特性。它通过确保UI相关代码在主线程上执行，帮助开发者编写更安全、更简洁的UI代码。</p>","noteIndex":{"id":"0f1b48c7-3a25-4016-83a5-15864d7803ad","title":"Development","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"type":"note","desc":"","links":[{"from":{"fname":"root","id":"c95dc4f5-23db-45e7-a15b-64582a183ccc","vaultName":"my_note"},"type":"backlink","position":{"start":{"line":8,"column":3,"offset":63},"end":{"line":8,"column":21,"offset":81},"indent":[]},"value":"development"}],"anchors":{},"fname":"development","updated":1618381238346,"created":1612940782409,"parent":null,"children":["400115e9-30f7-4a13-9776-db059bc9cd42","xsX5v3ZsyJ0i6gf9","1bc3b45a-b6f4-4150-87d3-5bd5b6eb8c24","6cea4852-6e7c-4140-b476-85c07b48a642","a40ef849-d301-4d74-a778-e6d9469dfb5d","09d9081f-3dff-453d-8488-7d2344cc8895","p11phg7nb10yw0wck1fyagq","92917ea3-452e-48dc-875e-5cd0002041db","2e151826-cb22-4d89-8ce0-71dad7204ce8","baa39444-0da9-4c55-8df7-2a6f8f787fa4","q4um3bc3st86ilkkvdjom6x","62daf50d-a39e-463f-aabd-be53790281fd","3524d0a7-be73-45d6-847e-c970f5c1c760","eac0f243-05b3-4b95-bec3-848e33edbc40","nc777xa48letazo00100hin"],"data":{},"custom":{"nav_order":0,"permalink":"/"},"body":"\n","contentHash":"38357962f5a50c6fd7d318dfa66bea90"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"previewV2Enabled":false,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.90.0","vaults":[{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableEditorDecorations":true,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["development","life"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"my_note","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://notes.tczhong.com","siteFaviconPath":"favicon.ico","siteIndex":"development"}}},"__N_SSG":true}