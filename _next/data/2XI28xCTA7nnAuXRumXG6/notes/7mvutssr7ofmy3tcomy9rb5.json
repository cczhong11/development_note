{"pageProps":{"note":{"id":"7mvutssr7ofmy3tcomy9rb5","title":"String","desc":"","updated":1702700033566,"created":1702700024088,"custom":{},"fname":"development.swift.string","type":"note","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"contentHash":"42dccb4fdf93ec0eb4a06ad210594472","links":[],"anchors":{"swift字符串插值和操作":{"type":"header","text":"Swift字符串插值和操作","value":"swift字符串插值和操作","line":8,"column":0,"depth":1},"字符串插值":{"type":"header","text":"字符串插值","value":"字符串插值","line":10,"column":0,"depth":2},"常用的字符串操作":{"type":"header","text":"常用的字符串操作","value":"常用的字符串操作","line":20,"column":0,"depth":2},"1-字符串连接":{"type":"header","text":"1. 字符串连接","value":"1-字符串连接","line":22,"column":0,"depth":3},"2-多行字符串":{"type":"header","text":"2. 多行字符串","value":"2-多行字符串","line":33,"column":0,"depth":3},"3-字符串长度":{"type":"header","text":"3. 字符串长度","value":"3-字符串长度","line":46,"column":0,"depth":3},"4-访问字符串中的字符":{"type":"header","text":"4. 访问字符串中的字符","value":"4-访问字符串中的字符","line":55,"column":0,"depth":3},"5-字符串的遍历":{"type":"header","text":"5. 字符串的遍历","value":"5-字符串的遍历","line":65,"column":0,"depth":3},"6-字符串的修改":{"type":"header","text":"6. 字符串的修改","value":"6-字符串的修改","line":75,"column":0,"depth":3}},"children":[],"parent":"q4um3bc3st86ilkkvdjom6x","data":{}},"body":"<h1 id=\"string\">String<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#string\"></a></h1>\n<h1 id=\"swift字符串插值和操作\">Swift字符串插值和操作<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#swift字符串插值和操作\"></a></h1>\n<h2 id=\"字符串插值\">字符串插值<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#字符串插值\"></a></h2>\n<p>在Swift中，字符串插值是一种构建新字符串的方式，可以将常量、变量、字面量和表达式的值包含在长字符串中。格式是将值放在<code>\\()</code>中。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"小明\"</span></span>\n<span class=\"token keyword\">let</span> greeting <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"你好, </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">name</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">!\"</span></span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>greeting<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 输出: 你好, 小明!</span>\n</code></pre>\n<h2 id=\"常用的字符串操作\">常用的字符串操作<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#常用的字符串操作\"></a></h2>\n<h3 id=\"1-字符串连接\">1. 字符串连接<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#1-字符串连接\"></a></h3>\n<p>可以使用<code>+</code>运算符来连接两个字符串。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> firstPart <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"Swift\"</span></span>\n<span class=\"token keyword\">let</span> secondPart <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"UI\"</span></span>\n<span class=\"token keyword\">let</span> completeString <span class=\"token operator\">=</span> firstPart <span class=\"token operator\">+</span> secondPart\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>completeString<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 输出: SwiftUI</span>\n</code></pre>\n<h3 id=\"2-多行字符串\">2. 多行字符串<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#2-多行字符串\"></a></h3>\n<p>使用三个双引号(<code>\"\"\"</code>)来创建多行字符串。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> multiLineString <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"\"\"\n这是一个\n多行\n字符串\n\"\"\"</span></span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>multiLineString<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"3-字符串长度\">3. 字符串长度<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#3-字符串长度\"></a></h3>\n<p>使用<code>.count</code>属性来获取字符串的长度。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> message <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"Hello, Swift!\"</span></span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"字符串长度为 </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">message<span class=\"token punctuation\">.</span>count</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"4-访问字符串中的字符\">4. 访问字符串中的字符<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#4-访问字符串中的字符\"></a></h3>\n<p>可以使用下标语法来访问字符串中的特定字符。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> word <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"Hello\"</span></span>\n<span class=\"token keyword\">let</span> firstLetter <span class=\"token operator\">=</span> word<span class=\"token punctuation\">[</span>word<span class=\"token punctuation\">.</span>startIndex<span class=\"token punctuation\">]</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>firstLetter<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 输出: H</span>\n</code></pre>\n<h3 id=\"5-字符串的遍历\">5. 字符串的遍历<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#5-字符串的遍历\"></a></h3>\n<p>使用<code>for-in</code>循环遍历字符串中的每个字符。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> <span class=\"token string-literal\"><span class=\"token string\">\"Swift\"</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"6-字符串的修改\">6. 字符串的修改<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#6-字符串的修改\"></a></h3>\n<p>字符串可以通过各种方法进行修改，例如添加字符、替换子字符串等。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"I like Swift\"</span></span>\nstr <span class=\"token operator\">+=</span> <span class=\"token string-literal\"><span class=\"token string\">\" programming\"</span></span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 输出: I like Swift programming</span>\n</code></pre>","noteIndex":{"id":"0f1b48c7-3a25-4016-83a5-15864d7803ad","title":"Development","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"type":"note","desc":"","links":[{"from":{"fname":"root","id":"c95dc4f5-23db-45e7-a15b-64582a183ccc","vaultName":"my_note"},"type":"backlink","position":{"start":{"line":8,"column":3,"offset":63},"end":{"line":8,"column":21,"offset":81},"indent":[]},"value":"development"}],"anchors":{},"fname":"development","updated":1618381238346,"created":1612940782409,"parent":null,"children":["400115e9-30f7-4a13-9776-db059bc9cd42","xsX5v3ZsyJ0i6gf9","1bc3b45a-b6f4-4150-87d3-5bd5b6eb8c24","6cea4852-6e7c-4140-b476-85c07b48a642","a40ef849-d301-4d74-a778-e6d9469dfb5d","09d9081f-3dff-453d-8488-7d2344cc8895","p11phg7nb10yw0wck1fyagq","92917ea3-452e-48dc-875e-5cd0002041db","2e151826-cb22-4d89-8ce0-71dad7204ce8","baa39444-0da9-4c55-8df7-2a6f8f787fa4","q4um3bc3st86ilkkvdjom6x","62daf50d-a39e-463f-aabd-be53790281fd","3524d0a7-be73-45d6-847e-c970f5c1c760","eac0f243-05b3-4b95-bec3-848e33edbc40","nc777xa48letazo00100hin"],"data":{},"custom":{"nav_order":0,"permalink":"/"},"body":"\n","contentHash":"38357962f5a50c6fd7d318dfa66bea90"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"previewV2Enabled":false,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.90.0","vaults":[{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableEditorDecorations":true,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["development","life"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"my_note","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://notes.tczhong.com","siteFaviconPath":"favicon.ico","siteIndex":"development"}}},"__N_SSG":true}