{"pageProps":{"note":{"id":"ai4yth4bdb6qtd8rhy8oa6r","title":"Operator","desc":"","updated":1702700480473,"created":1702700409401,"custom":{},"fname":"development.swift.operator","type":"note","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"contentHash":"6e313f8bd2ca9044f8351387c26b4a95","links":[],"anchors":{"swift中的数值比较运算符-":{"type":"header","text":"Swift中的数值比较运算符 ~=","value":"swift中的数值比较运算符-","line":8,"column":0,"depth":1},"概念":{"type":"header","text":"概念","value":"概念","line":10,"column":0,"depth":2},"运算符的用法":{"type":"header","text":"~=运算符的用法","value":"运算符的用法","line":14,"column":0,"depth":2},"1-在switch语句中的应用":{"type":"header","text":"1. 在switch语句中的应用","value":"1-在switch语句中的应用","line":16,"column":0,"depth":3},"2-自定义模式匹配":{"type":"header","text":"2. 自定义模式匹配","value":"2-自定义模式匹配","line":33,"column":0,"depth":3},"swift中的其他运算符":{"type":"header","text":"Swift中的其他运算符","value":"swift中的其他运算符","line":59,"column":0,"depth":1},"1-算术运算符":{"type":"header","text":"1. 算术运算符","value":"1-算术运算符","line":63,"column":0,"depth":2},"2-比较运算符":{"type":"header","text":"2. 比较运算符","value":"2-比较运算符","line":71,"column":0,"depth":2},"3-逻辑运算符":{"type":"header","text":"3. 逻辑运算符","value":"3-逻辑运算符","line":80,"column":0,"depth":2},"4-赋值运算符":{"type":"header","text":"4. 赋值运算符","value":"4-赋值运算符","line":86,"column":0,"depth":2},"5-位运算符":{"type":"header","text":"5. 位运算符","value":"5-位运算符","line":95,"column":0,"depth":2},"6-范围运算符":{"type":"header","text":"6. 范围运算符","value":"6-范围运算符","line":104,"column":0,"depth":2},"7-条件运算符":{"type":"header","text":"7. 条件运算符","value":"7-条件运算符","line":109,"column":0,"depth":2},"8-可选链运算符":{"type":"header","text":"8. 可选链运算符","value":"8-可选链运算符","line":113,"column":0,"depth":2},"9-空合并运算符":{"type":"header","text":"9. 空合并运算符","value":"9-空合并运算符","line":117,"column":0,"depth":2},"10-恒等与不恒等运算符":{"type":"header","text":"10. 恒等与不恒等运算符","value":"10-恒等与不恒等运算符","line":121,"column":0,"depth":2},"11-其他运算符":{"type":"header","text":"11. 其他运算符","value":"11-其他运算符","line":126,"column":0,"depth":2},"总结":{"type":"header","text":"总结","value":"总结","line":131,"column":0,"depth":2}},"children":[],"parent":"q4um3bc3st86ilkkvdjom6x","data":{}},"body":"<h1 id=\"operator\">Operator<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#operator\"></a></h1>\n<h1 id=\"swift中的数值比较运算符-\">Swift中的数值比较运算符 <code>~=</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#swift中的数值比较运算符-\"></a></h1>\n<h2 id=\"概念\">概念<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#概念\"></a></h2>\n<p>在Swift中，<code>~=</code>运算符不是不等于，而是一个\"模式匹配\"运算符。它通常用在<code>switch</code>语句中，用于检查值是否符合某个模式。</p>\n<h2 id=\"运算符的用法\"><code>~=</code>运算符的用法<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#运算符的用法\"></a></h2>\n<h3 id=\"1-在switch语句中的应用\">1. 在<code>switch</code>语句中的应用<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#1-在switch语句中的应用\"></a></h3>\n<p><code>~=</code>用于<code>switch</code>语句中，以确定值是否与某个模式匹配。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n\n<span class=\"token keyword\">switch</span> value <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">...</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"在1到10之间\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"超出范围\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在这个例子中，<code>~=</code>被隐式使用来检查<code>value</code>是否在<code>1...10</code>的范围内。</p>\n<h3 id=\"2-自定义模式匹配\">2. 自定义模式匹配<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#2-自定义模式匹配\"></a></h3>\n<p>你还可以为<code>~=</code>定义自己的行为，让它能够匹配自定义类型。</p>\n<pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">MyType</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token operator\">~=</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">:</span> <span class=\"token class-name\">MyType</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Bool</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> pattern<span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> value\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> myValue <span class=\"token operator\">=</span> <span class=\"token class-name\">MyType</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">switch</span> myValue<span class=\"token punctuation\">.</span>value <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">case</span> <span class=\"token class-name\">MyType</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"匹配成功\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"匹配失败\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在这个例子中，我们自定义了<code>~=</code>运算符来匹配<code>MyType</code>和<code>Int</code>类型。</p>\n<h1 id=\"swift中的其他运算符\">Swift中的其他运算符<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#swift中的其他运算符\"></a></h1>\n<p>Swift提供了多种运算符，用于执行各种操作，包括数学运算、比较、逻辑运算等。以下是Swift中常见的运算符类别及其例子。</p>\n<h2 id=\"1-算术运算符\">1. 算术运算符<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#1-算术运算符\"></a></h2>\n<ul>\n<li>加法 (<code>+</code>)</li>\n<li>减法 (<code>-</code>)</li>\n<li>乘法 (<code>*</code>)</li>\n<li>除法 (<code>/</code>)</li>\n<li>求余 (<code>%</code>)</li>\n</ul>\n<h2 id=\"2-比较运算符\">2. 比较运算符<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#2-比较运算符\"></a></h2>\n<ul>\n<li>等于 (<code>==</code>)</li>\n<li>不等于 (<code>!=</code>)</li>\n<li>大于 (<code>></code>)</li>\n<li>小于 (<code>&#x3C;</code>)</li>\n<li>大于等于 (<code>>=</code>)</li>\n<li>小于等于 (<code>&#x3C;=</code>)</li>\n</ul>\n<h2 id=\"3-逻辑运算符\">3. 逻辑运算符<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#3-逻辑运算符\"></a></h2>\n<ul>\n<li>逻辑非 (<code>!</code>)</li>\n<li>逻辑与 (<code>&#x26;&#x26;</code>)</li>\n<li>逻辑或 (<code>||</code>)</li>\n</ul>\n<h2 id=\"4-赋值运算符\">4. 赋值运算符<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#4-赋值运算符\"></a></h2>\n<ul>\n<li>直接赋值 (<code>=</code>)</li>\n<li>加法赋值 (<code>+=</code>)</li>\n<li>减法赋值 (<code>-=</code>)</li>\n<li>乘法赋值 (<code>*=</code>)</li>\n<li>除法赋值 (<code>/=</code>)</li>\n<li>求余赋值 (<code>%=</code>)</li>\n</ul>\n<h2 id=\"5-位运算符\">5. 位运算符<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#5-位运算符\"></a></h2>\n<ul>\n<li>按位取反 (<code>~</code>)</li>\n<li>按位与 (<code>&#x26;</code>)</li>\n<li>按位或 (<code>|</code>)</li>\n<li>按位异或 (<code>^</code>)</li>\n<li>按位左移 (<code>&#x3C;&#x3C;</code>)</li>\n<li>按位右移 (<code>>></code>)</li>\n</ul>\n<h2 id=\"6-范围运算符\">6. 范围运算符<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#6-范围运算符\"></a></h2>\n<ul>\n<li>封闭范围 (<code>a...b</code>)</li>\n<li>半开范围 (<code>a..&#x3C;b</code>)</li>\n</ul>\n<h2 id=\"7-条件运算符\">7. 条件运算符<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#7-条件运算符\"></a></h2>\n<ul>\n<li>三元运算符 (<code>a ? b : c</code>)</li>\n</ul>\n<h2 id=\"8-可选链运算符\">8. 可选链运算符<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#8-可选链运算符\"></a></h2>\n<ul>\n<li>可选链 (<code>?</code>)</li>\n</ul>\n<h2 id=\"9-空合并运算符\">9. 空合并运算符<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#9-空合并运算符\"></a></h2>\n<ul>\n<li>空合并 (<code>??</code>)</li>\n</ul>\n<h2 id=\"10-恒等与不恒等运算符\">10. 恒等与不恒等运算符<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#10-恒等与不恒等运算符\"></a></h2>\n<ul>\n<li>恒等 (<code>===</code>)</li>\n<li>不恒等 (<code>!==</code>)</li>\n</ul>\n<h2 id=\"11-其他运算符\">11. 其他运算符<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#11-其他运算符\"></a></h2>\n<ul>\n<li>Nil合并运算符 (<code>??</code>)</li>\n<li>区间运算符 (<code>..&#x3C;</code> 和 <code>...</code>)</li>\n</ul>\n<h2 id=\"总结\">总结<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#总结\"></a></h2>\n<p>Swift中的运算符覆盖了从基本的数学运算到更复杂的逻辑和比较操作。理解这些运算符的用法是掌握Swift编程的关键部分。</p>","noteIndex":{"id":"0f1b48c7-3a25-4016-83a5-15864d7803ad","title":"Development","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"type":"note","desc":"","links":[{"from":{"fname":"root","id":"c95dc4f5-23db-45e7-a15b-64582a183ccc","vaultName":"my_note"},"type":"backlink","position":{"start":{"line":8,"column":3,"offset":63},"end":{"line":8,"column":21,"offset":81},"indent":[]},"value":"development"}],"anchors":{},"fname":"development","updated":1618381238346,"created":1612940782409,"parent":null,"children":["400115e9-30f7-4a13-9776-db059bc9cd42","xsX5v3ZsyJ0i6gf9","1bc3b45a-b6f4-4150-87d3-5bd5b6eb8c24","6cea4852-6e7c-4140-b476-85c07b48a642","a40ef849-d301-4d74-a778-e6d9469dfb5d","09d9081f-3dff-453d-8488-7d2344cc8895","p11phg7nb10yw0wck1fyagq","92917ea3-452e-48dc-875e-5cd0002041db","2e151826-cb22-4d89-8ce0-71dad7204ce8","baa39444-0da9-4c55-8df7-2a6f8f787fa4","q4um3bc3st86ilkkvdjom6x","62daf50d-a39e-463f-aabd-be53790281fd","3524d0a7-be73-45d6-847e-c970f5c1c760","eac0f243-05b3-4b95-bec3-848e33edbc40","nc777xa48letazo00100hin"],"data":{},"custom":{"nav_order":0,"permalink":"/"},"body":"\n","contentHash":"38357962f5a50c6fd7d318dfa66bea90"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"previewV2Enabled":false,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.90.0","vaults":[{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableEditorDecorations":true,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["development","life"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"my_note","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://notes.tczhong.com","siteFaviconPath":"favicon.ico","siteIndex":"development"}}},"__N_SSG":true}