{"pageProps":{"note":{"id":"c16ae2ab-1fc3-40f4-8053-a8397954d3bb","title":"Reliable_data_transfer","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"type":"note","desc":"","links":[{"from":{"fname":"development.network.transportlayer.tcp","id":"29ec6e3f-8b45-44b1-95c0-69042790897a","vaultName":"my_note"},"type":"backlink","position":{"start":{"line":63,"column":1,"offset":2593},"end":{"line":63,"column":48,"offset":2640},"indent":[]},"value":"development.network.reliable_data_transfer"}],"anchors":{"rdt":{"type":"header","value":"rdt","line":8,"column":0},"possible-failure":{"type":"header","value":"possible-failure","line":10,"column":0},"methods":{"type":"header","value":"methods","line":14,"column":0},"protocols":{"type":"header","value":"protocols","line":23,"column":0},"stop-n-wait":{"type":"header","value":"stop-n-wait","line":25,"column":0},"go-back-n":{"type":"header","value":"go-back-n","line":37,"column":0},"selective-repeat":{"type":"header","value":"selective-repeat","line":54,"column":0}},"fname":"development.network.reliable_data_transfer","updated":1617516724931,"created":1617516215903,"parent":"92917ea3-452e-48dc-875e-5cd0002041db","children":[],"data":{},"custom":{},"contentHash":"815054c6cbf960a81f7e4de4d61f4320"},"body":"<h1 id=\"reliable_data_transfer\">Reliable_data_transfer<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#reliable_data_transfer\"></a></h1>\n<h1 id=\"rdt\">RDT<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#rdt\"></a></h1>\n<h2 id=\"possible-failure\">possible failure<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#possible-failure\"></a></h2>\n<p>bit-errors, lossy, duplicate delivery , out-of-order delivery</p>\n<h2 id=\"methods\">methods<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#methods\"></a></h2>\n<ul>\n<li>checksums: bit error </li>\n<li>receiver feedback: bit error, ACK/NACK， Cumulative acknowledgments(I have received all packets with sequence numbers up to but not including sn.) allow acknowledgment of numerous packets at a time. They can be useful in pipelined protocols. 可能lost</li>\n<li>retransmission : Sender sends another copy of segment, detect loss and allows for duplicate seg</li>\n<li>sequence numbers : Distinguish between old and new, Gaps let receiver detect lost segment, find duplicate packets，restoring the transmitted order. have to be a bounded # bits</li>\n<li>timer expiration: Segment or receiver feedback is lost (sender: Resends a packet after a timer fires. Sends a new packet after an acknowledgment (positive) arrives.)</li>\n<li>window:Control sending of multiple segments, allow for reuse of sequence numbers, also allow for pipeling segments</li>\n</ul>\n<h2 id=\"protocols\">protocols<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#protocols\"></a></h2>\n<h3 id=\"stop-n-wait\">Stop-n-Wait<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#stop-n-wait\"></a></h3>\n<ul>\n<li>Simplest Protocol that will handle bit errors and segment loss\n<ul>\n<li>use: checksum, ack, sn, timers</li>\n<li>1 bit for sequence number</li>\n<li><img src=\"/assets/images/2021-04-03-23-06-30.png\"></li>\n<li><img src=\"/assets/images/2021-04-03-23-07-36.png\"></li>\n<li>为了解决checksum返回的时候有问题。可能ack会lost。带来的问题就是可能重复发几次。所以需要seq num</li>\n<li><img src=\"/assets/images/2021-04-03-23-08-48.png\"></li>\n<li>计时发送，看指定时间能否达到response, 没seq num. 接收者不能知道是否是重发。LOST ACK和lost segment对于发送方式一样的</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"go-back-n\">Go Back N<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#go-back-n\"></a></h2>\n<ul>\n<li>sliding window: A mechanism to control multiple, in-flight segments without overwhelming receiver, Sender is allowed to transmit N segments without waiting for an ACK</li>\n<li>“window” of up to N, consecutive unACKed segments allowed</li>\n<li>Sets a <strong>timer</strong> for each in-flight segment</li>\n<li>timeout(n): retransmit segment n and all <strong>higher</strong> seq# segments in window</li>\n<li>sender:\n<ul>\n<li>Sender places a k-bit seq# in header</li>\n<li>“window” of up to N, consecutive unACKed segments allowed</li>\n<li>Sets a timer for each in-flight segment</li>\n<li>timeout(n): retransmit segment n and <strong>all higher</strong> seq# segments in window</li>\n<li>ACK(n): ACKs all segments up to, including seq# n (Cumulative ACK)</li>\n</ul>\n</li>\n<li>receiver: ACK-only: always send ACK for correctly-received segment with <strong>highest in-order seq</strong>, Receipt of out-of-order segment just discard and send with highest in-order seq \n<ul>\n<li>May generate duplicate ACKs</li>\n<li>Why discard segs received out-of-order： Don’t want to buffer them, going to be re-sent anyway</li>\n</ul>\n</li>\n<li>A single segment error can cause many segments to be retransmitted</li>\n</ul>\n<h2 id=\"selective-repeat\">Selective Repeat<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#selective-repeat\"></a></h2>\n<ul>\n<li>Receiver individually ACKs all correctly received segments</li>\n<li>Buffers segs for eventual in-order delivery</li>\n<li>Sender only resends segments for which ACK not received</li>\n<li>Sets timer for each segment</li>\n<li>Sender window of N consecutive seq#s</li>\n<li>Limits seq # s of sent, but unACKed segs</li>\n<li><img src=\"/assets/images/2021-04-03-23-12-02.png\"></li>\n<li>issues: both side have varying view, receiver window移动了，但是发送端没收到ack， 会重传。</li>\n<li>sequence number的space至少是2^k 个，k是window的大小</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/29ec6e3f-8b45-44b1-95c0-69042790897a\">Tcp (my_note)</a></li>\n</ul>","noteIndex":{"id":"0f1b48c7-3a25-4016-83a5-15864d7803ad","title":"Development","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"type":"note","desc":"","links":[{"from":{"fname":"root","id":"c95dc4f5-23db-45e7-a15b-64582a183ccc","vaultName":"my_note"},"type":"backlink","position":{"start":{"line":8,"column":3,"offset":63},"end":{"line":8,"column":21,"offset":81},"indent":[]},"value":"development"}],"anchors":{},"fname":"development","updated":1618381238346,"created":1612940782409,"parent":null,"children":["400115e9-30f7-4a13-9776-db059bc9cd42","xsX5v3ZsyJ0i6gf9","1bc3b45a-b6f4-4150-87d3-5bd5b6eb8c24","6cea4852-6e7c-4140-b476-85c07b48a642","a40ef849-d301-4d74-a778-e6d9469dfb5d","09d9081f-3dff-453d-8488-7d2344cc8895","p11phg7nb10yw0wck1fyagq","92917ea3-452e-48dc-875e-5cd0002041db","2e151826-cb22-4d89-8ce0-71dad7204ce8","baa39444-0da9-4c55-8df7-2a6f8f787fa4","q4um3bc3st86ilkkvdjom6x","62daf50d-a39e-463f-aabd-be53790281fd","3524d0a7-be73-45d6-847e-c970f5c1c760","eac0f243-05b3-4b95-bec3-848e33edbc40","nc777xa48letazo00100hin"],"data":{},"custom":{"nav_order":0,"permalink":"/"},"body":"\n","contentHash":"38357962f5a50c6fd7d318dfa66bea90"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"previewV2Enabled":false,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.90.0","vaults":[{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableEditorDecorations":true,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["development","life"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"my_note","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://notes.tczhong.com","siteFaviconPath":"favicon.ico","siteIndex":"development"}}},"__N_SSG":true}