{"pageProps":{"note":{"id":"aca8c893-60f8-465f-bda5-31b9ae83d81a","title":"Container","desc":"","updated":1649222265074,"created":1618287567586,"custom":{},"fname":"development.system.compute.container","type":"note","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"contentHash":"415117f761aae9b76c3d56253d35e73b","links":[],"anchors":{"vm-and-containers":{"type":"header","text":"VM and containers","value":"vm-and-containers","line":9,"column":0,"depth":1},"containers":{"type":"header","text":"Containers","value":"containers","line":39,"column":0,"depth":2},"tupperware":{"type":"header","text":"Tupperware","value":"tupperware","line":48,"column":0,"depth":1}},"children":[],"parent":"29d090f8-75e0-4755-911f-d09996ce472c","data":{}},"body":"<h1 id=\"container\">Container<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#container\"></a></h1>\n<h1 id=\"vm-and-containers\">VM and containers<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#vm-and-containers\"></a></h1>\n<ul>\n<li><strong>what</strong>: a virtualized system is a <strong>mapping</strong> of its interface, and all resources visible through that interface, to the interface and resources of a real system.</li>\n<li><strong>why</strong>: \n<ul>\n<li>provide a way of relaxing constrains and increasing flexibility</li>\n<li>advantages\n<ul>\n<li>multiple secure environment: system VM provides a sandbox isolates one system environment from others</li>\n<li>failure isolation</li>\n<li>mixed-os environment: one hardware support multiple OS concurrently</li>\n<li>better System Utilization: can be dynamically or statically re-configured for changing needs</li>\n</ul>\n</li>\n<li>properties:\n<ul>\n<li>isolation: fault, software, performance(done by scheduling)</li>\n<li>encapsulation: all VM state could be captured in a file</li>\n<li>interposition: all guest actions could be inspect, modify and deny</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>how</strong>: abstraction. provide a simplified interface to underlying resources. virtualization provides a different interface at the same level of abstraction.\n<ul>\n<li>hypervisor: a co-designed firmware-software layer,use this layer to manage the virtual machines</li>\n<li>full virtualization: provide same function as the underlying physical hardware. Allow unmodified OS to execute on VM</li>\n<li>para-virtualization: provide similar function, and modify OS to cooperate with VMM. Get lower overhead and better performance.</li>\n<li>Emulation: implement same function with different intereface and functionality</li>\n<li>system VM: vmare, process VM: jvm</li>\n<li>multiprocessor system: partition(subset of the resources)-> in space(physical), in time(logical)</li>\n<li>in DS:\n<ul>\n<li>abstract environment from resources</li>\n<li>abstract application from environment</li>\n<li>different environment no affect users</li>\n<li>migration</li>\n<li>scaling</li>\n<li>protection</li>\n<li>sharing</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"containers\">Containers<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#containers\"></a></h2>\n<ul>\n<li>share part of OS</li>\n<li>provide independent</li>\n<li>resource share.  secure problem</li>\n<li>less isolation</li>\n</ul>\n<p>Docker allows you to set the limit of memory, CPU, and also recently GPU on your container. It is not as simple as it sounds.</p>\n<h1 id=\"tupperware\">Tupperware<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tupperware\"></a></h1>\n<p><img src=\"/assets/images/2021-05-10-22-59-20.png\"></p>\n<p><img src=\"/assets/images/2021-05-10-23-00-53.png\"></p>\n<p>resource broker for source of truth for machine info. One instance of Resource Broker (RB) is deployed to each DC. RB records whether a machine in the DC is free or assigned to an entitlement</p>\n<p><img src=\"/assets/images/2021-05-10-23-06-16.png\"></p>\n<p><img src=\"/assets/images/2021-05-11-20-32-16.png\"></p>\n<p>Figure 4 shows an overview of Twine. The Capacity Portal allows users to request or modify entitlements, which associate capacity quotas with business units deﬁned in the service accounting hierarchy. With a granted entitlement, a user deploys jobs through the front end. The scheduler manages job and task lifecycle, e.g., orchestrating a job’s software release. If a job has a TaskController, the scheduler coordinates with the TaskController to make decisions, e.g., delaying a task restart to rebuild a lost data replica ﬁrst. The allocator assigns machines to entitlements and assigns tasks to machines. ReBalancer runs asynchronously and continuously to improve the allocator’s decisions, e.g., better balancing the utilization of CPU, power, and network. Resource Broker (RB) stores machine information and unavailability events that track hardware failures and planned maintenance. DC operators schedule planned maintenance through Ops Planner. The Health Check Service (HCS) monitors machines and updates their status in RB. The agent runs on every machine to manage tasks. Sidekick switches host proﬁles as needed. Service Resource Manager (SRM) autoscales jobs in response to load changes. Conveyor is our continuous delivery system.</p>\n<p><a href=\"https://www.usenix.org/system/files/osdi20-tang.pdf\">reference</a></p>","noteIndex":{"id":"0f1b48c7-3a25-4016-83a5-15864d7803ad","title":"Development","vault":{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},"type":"note","desc":"","links":[{"from":{"fname":"root","id":"c95dc4f5-23db-45e7-a15b-64582a183ccc","vaultName":"my_note"},"type":"backlink","position":{"start":{"line":8,"column":3,"offset":63},"end":{"line":8,"column":21,"offset":81},"indent":[]},"value":"development"}],"anchors":{},"fname":"development","updated":1618381238346,"created":1612940782409,"parent":null,"children":["400115e9-30f7-4a13-9776-db059bc9cd42","xsX5v3ZsyJ0i6gf9","1bc3b45a-b6f4-4150-87d3-5bd5b6eb8c24","6cea4852-6e7c-4140-b476-85c07b48a642","a40ef849-d301-4d74-a778-e6d9469dfb5d","09d9081f-3dff-453d-8488-7d2344cc8895","p11phg7nb10yw0wck1fyagq","92917ea3-452e-48dc-875e-5cd0002041db","2e151826-cb22-4d89-8ce0-71dad7204ce8","baa39444-0da9-4c55-8df7-2a6f8f787fa4","q4um3bc3st86ilkkvdjom6x","62daf50d-a39e-463f-aabd-be53790281fd","3524d0a7-be73-45d6-847e-c970f5c1c760","eac0f243-05b3-4b95-bec3-848e33edbc40","nc777xa48letazo00100hin"],"data":{},"custom":{"nav_order":0,"permalink":"/"},"body":"\n","contentHash":"38357962f5a50c6fd7d318dfa66bea90"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"previewV2Enabled":false,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.90.0","vaults":[{"fsPath":"repos/dendron-aws-vault","remote":{"type":"git","url":"https://github.com/cczhong11/my_note.git"},"name":"my_note"},{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableEditorDecorations":true,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["development","life"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"my_note","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://notes.tczhong.com","siteFaviconPath":"favicon.ico","siteIndex":"development"}}},"__N_SSG":true}